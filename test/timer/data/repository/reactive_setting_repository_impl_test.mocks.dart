// Mocks generated by Mockito 5.4.2 from annotations
// in pomodoro_timer/test/timer/data/repository/reactive_setting_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pomodoro_timer/core/constants.dart' as _i5;
import 'package:pomodoro_timer/timer/data/datasource/local/setting_repository_db.dart'
    as _i3;
import 'package:pomodoro_timer/timer/data/models/setting_hive_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimerSettingModel_0 extends _i1.SmartFake
    implements _i2.TimerSettingModel {
  _FakeTimerSettingModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSoundSettingModel_1 extends _i1.SmartFake
    implements _i2.SoundSettingModel {
  _FakeSoundSettingModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingRepositoryHiveDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingRepositoryHiveDB extends _i1.Mock
    implements _i3.SettingRepositoryHiveDB {
  MockSettingRepositoryHiveDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TimerSettingModel getTimer() => (super.noSuchMethod(
        Invocation.method(
          #getTimer,
          [],
        ),
        returnValue: _FakeTimerSettingModel_0(
          this,
          Invocation.method(
            #getTimer,
            [],
          ),
        ),
      ) as _i2.TimerSettingModel);

  @override
  _i4.Future<void> storeTimerSetting({
    int? pomodoroTime,
    int? shortBreak,
    int? longBreak,
    bool? pomodoroSequence,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeTimerSetting,
          [],
          {
            #pomodoroTime: pomodoroTime,
            #shortBreak: shortBreak,
            #longBreak: longBreak,
            #pomodoroSequence: pomodoroSequence,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i2.SoundSettingModel getSound() => (super.noSuchMethod(
        Invocation.method(
          #getSound,
          [],
        ),
        returnValue: _FakeSoundSettingModel_1(
          this,
          Invocation.method(
            #getSound,
            [],
          ),
        ),
      ) as _i2.SoundSettingModel);

  @override
  _i4.Future<void> storeSoundSetting({
    bool? playSound,
    String? audioPath,
    _i5.SoundType? type,
    _i6.Uint8List? bytesData,
    String? importedFileName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeSoundSetting,
          [],
          {
            #playSound: playSound,
            #audioPath: audioPath,
            #type: type,
            #bytesData: bytesData,
            #importedFileName: importedFileName,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
